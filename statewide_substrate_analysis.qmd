---
title: "statewide_substrate_analysis"
format: html
editor: visual
---

This is the breakdown of all substrate habitats along the coast of CA

## Setup

```{r, message = FALSE}
# Load libraries

# Data wrangling
library(tidyverse)
library(janitor)
library(dplyr)
library(here)

# Mapping
library(stars)

library(units)

library(paletteer)
library(stringr)
```

```{r, message=FALSE}
# Read in data from primary substrate RDS
rds.dir <- "/capstone/marinebiomaps/data/rds-files"
substrate <- readRDS(file.path(rds.dir, "substrate.rds")) %>% 
  filter(cmecs_sc_category != "Unclassified")

# Project to CRS and filter to CA
substrate <- st_transform(substrate, crs = 32610) %>%
  filter(state == 'CA')
```

## Find percentages

```{r}
# Find total substrate area in MPAs for all MPAs
total_ha_all_sub <- sum(substrate$area_ha, na.rm = TRUE)

# Check statement
print(paste0("The total area of substrate data within MPAs in Ha: ", round(total_ha_all_sub)))


# Summarize total area by substrate category and calculate percentage
substrate_area <- substrate %>% 
  group_by(cmecs_sc_category) %>% 
  
  # Add together the same categories
  summarize(total_area_ha = sum(area_ha, na.rm = TRUE)) %>% 
  ungroup() %>% 
  # Find percentage
  mutate(percent_of_total = (total_area_ha / total_ha_all_sub ) * 100)

# Remove scientific notation
options(scipen = 999)
```

```{r}
# Check if any percentages fall outside normal changes

invalid_percent <- substrate_area %>%
  filter(percent_of_total < 0 | percent_of_total > 100)

if (nrow(invalid_percent) > 0) {
  warning("Some percent_of_total values are outside the valid range (0-100). Check the following rows:")
  print(invalid_percent)
} else {
  message("All percent_of_total values are within the valid range (0-100).")
}

```

```{r}
# Check answer
substrate$areacheck <- (st_area(substrate) / 1000)
```

## Plot

```{r, warning=FALSE}
# Wrap longer category names
substrate_area$cmecs_sc_category <- str_wrap(substrate_area$cmecs_sc_category, width = 20)


# Define palette -- adapted from lisa::C_M_Coolidge from scale_fill_paletteer
substrate_palette <- c("#204035FF", "#4A7169FF", "#849383", "#BEB59CFF", "#998467", "#735231FF", "#49271BFF")

# Plot the data
ggplot(substrate_area, aes(as.factor(cmecs_sc_category), percent_of_total, fill = cmecs_sc_category)) +
  
  geom_col() +
  
  # Flip bars
  coord_flip() +
  
  # Add labels
  labs(title = "Substrate Percentages along CA Coast",
         y = "Percent Substrate",
         x = "Substrate Categories") +
  
  # Apply color palette
  scale_fill_manual(values = substrate_palette) +
  
  # Adjust theme
  theme_classic() +
  theme(legend.position='none',
        axis.title.y = element_text(margin = margin(r = 20)),
        text = element_text(size = 18)) +
  scale_y_continuous(expand = c(0, 0), limits = c(0, 100)) +
  
  # Add text label
  geom_label(
    aes(label = paste0(round(percent_of_total, 2), "%")), 
    position = position_stack(vjust = 0.5), 
    size = 6,
    y = 8,
    fill = "white",
    label.size = 0)
```

```{r}
# Save plot
# ggsave("allmpa.png", plot = p1, width = 12, height = 8, bg = "transparent")
```

# Substrate in MPAs

Now let's find the breakdown of substrate habitats within MPAs

```{r}
# Read in data from primary substrate RDS
rds.dir <- "/capstone/marinebiomaps/data/rds-files"
substrate_mpa <- readRDS(file.path(rds.dir, "substrate_in_mpas.rds")) %>% st_drop_geometry() %>%
  filter(cmecs_sc_category != "Unclassified")
```

```{r}
# Find total substrate area in MPAs for all MPAs
total_ha_all_mpa_sub <- sum(substrate_mpa$area_ha, na.rm = TRUE)

# Check statement
print(paste0("The total area of substrate data within MPAs in Ha: ", round(total_ha_all_mpa_sub)))


# Summarize total area by substrate category and calculate percentage
substrate_area_mpa <- substrate_mpa %>% 
  group_by(cmecs_sc_category) %>% 
  
  # Add together the same categories
  summarize(total_area_ha = sum(area_ha, na.rm = TRUE)) %>% 
  ungroup() %>% 
  # Find percentage
  mutate(percent_of_total_mpa = (total_area_ha / total_ha_all_mpa_sub ) * 100)

# Remove scientific notation
options(scipen = 999)
```

```{r}
# Check if any percentages fall outside normal changes

invalid_percent_mpa <- substrate_area_mpa %>%
  filter(percent_of_total_mpa < 0 | percent_of_total_mpa > 100)

if (nrow(invalid_percent_mpa) > 0) {
  warning("Some percent_of_total values are outside the valid range (0-100). Check the following rows:")
  print(invalid_percent_mpa)
} else {
  message("All percent_of_total values are within the valid range (0-100).")
}

```

```{r, warning=FALSE}
# Wrap longer category names
substrate_area$cmecs_sc_category <- str_wrap(substrate_area$cmecs_sc_category, width = 20)


# Define palette -- adapted from lisa::C_M_Coolidge from scale_fill_paletteer
substrate_palette <- c("#204035FF", "#4A7169FF", "#849383", "#BEB59CFF", "#998467", "#735231FF", "#49271BFF")

# Plot the data
ggplot(substrate_area_mpa, aes(as.factor(cmecs_sc_category), percent_of_total_mpa, fill = cmecs_sc_category)) +
  
  geom_col() +
  
  # Flip bars
  coord_flip() +
  
  # Add labels
  labs(title = "Substrate Percentages in all MPAs",
         y = "Percent Substrate",
         x = "Substrate Categories") +
  
  # Apply color palette
  scale_fill_manual(values = substrate_palette) +
  
  # Adjust theme
  theme_classic() +
  theme(legend.position='none',
        axis.title.y = element_text(margin = margin(r = 20)),
        text = element_text(size = 18)) +
  scale_y_continuous(expand = c(0, 0), limits = c(0, 100)) +
  
  # Add text label
  geom_label(
    aes(label = paste0(round(percent_of_total_mpa, 2), "%")), 
    position = position_stack(vjust = 0.5), 
    size = 6,
    y = 8,
    fill = "white",
    label.size = 0)
```

```{r}
# Save plot
# ggsave("submpa.png", plot = p2, width = 12, height = 8, bg = "transparent")
```
